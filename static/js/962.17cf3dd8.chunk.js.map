{"version":3,"file":"static/js/962.17cf3dd8.chunk.js","mappings":"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","sources":["api/recipes.js","components/Forms/Recipe/AddRecipeForm.styled.js","components/MainTitle/MainTitle.styled.js","components/MainTitle/MainTitle.jsx","schemas/AddRecipeSchema.js","components/ButtonSkew/ButtonSkew.jsx","components/Forms/Recipe/AddRecipeForm.js","components/PopularRecipes/PopularRecipes.styled.js","components/PopularRecipes/PopularRecipes.js","pages/AddRecipe/AddRecipe.js","pages/AddRecipe/AddRecipe.styled.js"],"sourcesContent":["import { instance } from './APIconfig';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// GET ALL RECIPES\n// export const getAllRecipes = createAsyncThunk(\n//   'recipes/getAllrecipes',\n//   async (_, thunkAPI) => {\n//     try {\n//       const { data } = await instance.get(`recipes`);\n\n//       return data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n\nexport const getAllRecipes = async () => {\n  try {\n    const { data } = await instance.get('/recipes');\n    console.log('data', data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//\nexport const getOwnRecipes = async()=> {\n  try {\n    const { data } = await instance.get('/ownRecipes');\n    console.log('ownRecipes :', data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getFavoriteRecipes = async () => {\n  try {\n    const { data } = await instance.get('/favorite');\n    console.log(`favorite API`, data)\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// GET RECIPES BY INGREDIENT\nexport const getRecipesByIngredient = createAsyncThunk(\n  'recipes/getRecipesByIngredient',\n  async ({ ingredient }, thunkAPI) => {\n    try {\n      const { data } = await instance.get(`recipes/${ingredient}`);\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// GET RECIPES BY CATEGORY\nexport const getRecipesByCategory = createAsyncThunk(\n  'recipes/getRecipesByCategory',\n  async ({ category }, thunkAPI) => {\n    try {\n      const { data } = await instance.get(`recipes/categories/${category}`);\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// SEARCH RECIPES BY TITLE\nexport const searchRecipes = createAsyncThunk(\n  'recipes/searchRecipes',\n  async ({ title }, thunkAPI) => {\n    try {\n      const { data } = await instance.get(`recipes/search/${title}`);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// GET CATEGORIES LIST\nexport const getCategories = async () => {\n  try {\n    const { data } = await instance.get('/categoryList');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// GET INGREDIENTS LIST\nexport const getIngredients = async () => {\n  try {\n    const { data } = await instance.get('/ingredients');\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// GET POPULAR RECIPES\nexport const getPopularRecipes = createAsyncThunk(\n  'recipes/popular',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await instance.get(`recipes/popular`);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { Form, Field } from 'formik';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport mediaRule from 'utils/mediaRule';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 800px;\n  gap: 44px;\n`;\n\nexport const ImageField = styled.div`\n  position: relative;\n`;\n\nexport const ImageWrapper = styled.div`\n  flex: 0.4;\n  width: 280px;\n  height: 268px;\n  border-radius: 8px;\n  overflow: hidden;\n  cursor: pointer;\n\n  ${mediaRule('desktop', '', 'width: 358px; height: 344px;')}\n  img {\n    width: 100%;\n  }\n`;\n\nexport const UploadBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: var(--accent-color);\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  gap: 32px;\n\n  ${mediaRule('tablet', '', 'flex-direction: row; align-items: start')}\n`;\n\nexport const Desc = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  gap: 24px;\n\n  ${mediaRule('tablet', 'desktop', 'gap: 32px')}\n  ${mediaRule('desktop', '', 'gap: 40px')}\n`;\n\nexport const DescField = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 18px;\n  border-bottom: 1px solid var(--input-border-color);\n`;\n\nexport const DescLabel = styled.label`\n  opacity: 0.5;\n  line-height: normal;\n`;\n\nexport const DescSelect = styled(Select)`\n  & .valueContainer {\n    ${mediaRule('tablet', '', 'font-size: 14px')}\n  }\n\n  & .input {\n    display: none;\n  }\n\n  & .menu-list {\n    width: 100px;\n    height: 85px;\n\n    &::-webkit-scrollbar {\n      background-color: transparent;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n  font: inherit;\n  text-align: right;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const Error = styled.div`\n  position: absolute;\n  bottom: -2px;\n  right: 0;\n  font-size: 12px;\n  color: var(--error);\n`;\n\nexport const FormTitle = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  letter-spacing: -0.48px;\n`;\n\nexport const IngredientsWrapper = styled.div`\n  ${mediaRule('desktop', '', 'max-width: 610px;')}\n`;\n\nexport const IngredientsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const IngredientsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-top: 24px;\n\n  ${mediaRule('tablet', '', 'margin-top: 32px;')}\n`;\n\nexport const QtySelector = styled.div`\n  display: flex;\n  gap: 14px;\n  padding: 4px 14px;\n  font-size: 14px;\n  line-height: 1.28;\n  border-radius: 18px;\n  border: 1px solid var(--selector-border-color);\n`;\n\nexport const IngredientContainer = styled.li`\n  position: relative;\n  display: flex;\n  align-items: start;\n  gap: 14px;\n`;\n\nexport const IngredientErrorWrapper = styled.div`\n  display: flex;\n  width: 100%;\n\n  flex-direction: column;\n`;\n\nexport const Ingredient = styled(Select)`\n  & .valueContainer {\n    ${mediaRule('tablet', 'desktop', 'font-size:14px')}\n    ${mediaRule('desktop', '', 'font-size:18px')}\n  }\n\n  & .menu {\n    ${mediaRule('tablet', 'desktop', 'font-size:12px')}\n    ${mediaRule('desktop', '', 'font-size:14px')}\n  }\n`;\n\nexport const Measure = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 16px;\n  border-radius: 4px;\n  background-color: var(--input-bg-color);\n`;\n\nexport const MeasureInput = styled(Field)`\n  background-color: transparent;\n  height: 27px;\n  width: 30px;\n  flex: 0.5;\n  padding: 0;\n  text-align: right;\n  border: none;\n  font: inherit;\n`;\n\nexport const IngredientsButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  opacity: 0.3;\n  color: var(--font-color);\n\n  &:hover {\n    color: var(--accent-color);\n    opacity: 1;\n  }\n`;\n\nexport const Delete = styled(IngredientsButton)`\n  width: 18px;\n  height: 18px;\n  align-self: center;\n  margin-left: 18px;\n  color: var(--font-color);\n  opacity: 1;\n`;\n\nexport const Preparation = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Instructions = styled(Field)`\n  max-width: 505px;\n  margin-top: 24px;\n  padding: 10px 16px;\n  font: inherit;\n  color: inherit;\n  resize: none;\n  border: none;\n  border-radius: 6px;\n  background-color: var(--input-bg-color);\n`;\n\nexport const InstructionsError = styled(Error)`\n  bottom: -30px;\n  left: 0%;\n`;\n","import styled from 'styled-components';\nimport mediaRule from 'utils/mediaRule';\n\nexport const MainTitleBox = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 72px;\n\n  ${mediaRule('tablet', '', 'margin-bottom:100px;')}\n`;\n\nexport const MainTitleStyled = styled.h1`\n  margin-top: 35px;\n  margin-bottom: 0;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 54px;\n    font-size: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 84px;\n    font-size: 44px;\n  }\n`;\n\nexport const DecorBoxLeft = styled.span`\n  display: block;\n  position: absolute;\n  top: -27px;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  background-color: var(--accent-color);\n  border-radius: 3px;\n  transform: rotate(-25deg);\n\n  @media screen and (min-width: 768px) {\n    top: -32px;\n    left: 187px;\n    width: 14px;\n    height: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: -47px;\n    left: 228px;\n  }\n`;\n\nexport const DecorBoxCenter = styled.span`\n  display: block;\n  position: absolute;\n  left: 231px;\n  top: 27px;\n  width: 6px;\n  height: 6px;\n  background-color: var(--input-text-color);\n  border-radius: 3px;\n  transform: rotate(-25deg);\n\n  @media screen and (min-width: 768px) {\n    top: 19px;\n    left: 405px;\n    width: 12px;\n    height: 12px;\n  }\n  @media screen and (min-width: 1280px) {\n    top: 36px;\n    left: 707px;\n  }\n`;\n\nexport const DecorBoxRight = styled.span`\n  display: block;\n  position: absolute;\n  top: 0px;\n  left: 333px;\n  width: 8px;\n  height: 8px;\n  background-color: var(--accent-color);\n  border-radius: 3px;\n  transform: rotate(-25deg);\n\n  @media screen and (min-width: 768px) {\n    top: -38px;\n    left: 694px;\n    width: 14px;\n    height: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    top: -34px;\n    left: 1150px;\n  }\n`;\n","import {\n  MainTitleStyled,\n  DecorBoxLeft,\n  DecorBoxCenter,\n  DecorBoxRight,\n  MainTitleBox,\n} from './MainTitle.styled';\n\nexport const MainTitle = ({ text }) => {\n  return (\n    <MainTitleBox>\n      <DecorBoxLeft />\n      <DecorBoxCenter />\n      <DecorBoxRight />\n      <MainTitleStyled>{text}</MainTitleStyled>\n    </MainTitleBox>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const recipeSchema = Yup.object().shape({\n  title: Yup.string().required('Please enter a title for the recipe'),\n  description: Yup.string().required(\n    'Please enter a description for the recipe'\n  ),\n  category: Yup.string().required('Please select a category'),\n  time: Yup.string().required('Please select cooking time'),\n  thumb: Yup.mixed().required('Please upload a thumbnail image'),\n  ingredients: Yup.array()\n    .of(\n      Yup.object().shape({\n        id: Yup.string().required('Please select an ingredient'),\n        measure: Yup.array().required('Please select a measure'),\n      })\n    )\n    .min(1, 'Please enter at least one ingredient'),\n  instructions: Yup.string().required('Please enter the recipe instructions'),\n});\n\nexport const validateForm = async values => {\n  try {\n    await recipeSchema.validate(values, { abortEarly: false });\n    return {};\n  } catch (error) {\n    const errors = {};\n    error.inner.forEach(err => {\n      errors[err.path] = err.message;\n    });\n    return errors;\n  }\n};\n","import { ButtonSkewStyled } from './ButtonSkew.styled';\n\nexport const ButtonSkew = ({ children, variant }) => {\n  return (\n    <ButtonSkewStyled data-variant={variant}>\n      <div className=\"inner\">{children}</div>\n    </ButtonSkewStyled>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUploading from 'react-images-uploading';\nimport {\n  StyledForm,\n  ImageField,\n  UploadBtn,\n  Info,\n  Desc,\n  DescField,\n  DescLabel,\n  DescSelect,\n  Input,\n  Error,\n  FormTitle,\n  IngredientsHeader,\n  QtySelector,\n  IngredientsWrapper,\n  IngredientContainer,\n  Ingredient,\n  Measure,\n  MeasureInput,\n  Preparation,\n  Instructions,\n  ImageWrapper,\n  IngredientsList,\n  InstructionsError,\n  Delete,\n  IngredientsButton,\n} from './AddRecipeForm.styled';\nimport { getIngredients, getCategories } from 'api/recipes';\nimport Icon from 'components/IconComponent/Icon';\nimport { recipeSchema } from 'schemas/AddRecipeSchema';\nimport { addRecipe } from 'redux/recipes/recipesOperations';\nimport { ButtonSkew } from 'components/ButtonSkew/ButtonSkew';\nimport useUser from 'hooks/useUser';\n\nconst timeOptions = Array.from({ length: 24 }, (_, i) => {\n  return { label: `${(i + 1) * 5} min`, value: `${(i + 1) * 5} min` };\n});\n\nconst measureOptions = [\n  { value: 'tbs', label: 'tbs' },\n  { value: 'g', label: 'g' },\n  { value: 'kg', label: 'kg' },\n];\n\nconst selectorStyles = {\n  container: () => ({\n    position: 'relative',\n  }),\n  control: () => ({\n    display: 'flex',\n    width: '100%',\n    border: 'none',\n    cursor: 'pointer',\n  }),\n  valueContainer: baseStyles => ({\n    ...baseStyles,\n    textAlign: 'right',\n    fontSize: 12,\n    fontWeight: 400,\n    padding: '0 8px',\n    lineHeight: 1,\n  }),\n  input: baseStyles => ({\n    ...baseStyles,\n    textAlign: 'right',\n    justifySelf: 'right',\n    padding: 0,\n    margin: 0,\n  }),\n  placeholder: baseStyles => ({\n    ...baseStyles,\n    margin: 0,\n  }),\n  indicatorSeparator: () => ({ display: 'none' }),\n  dropdownIndicator: () => ({\n    display: 'flex',\n    alignItems: 'center',\n    color: 'var(--accent-color)',\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    position: 'absolute',\n    width: '100%',\n    top: 24,\n    right: 0,\n    boxShadow:\n      '0px 6.518518447875977px 7.8222222328186035px 0px rgba(0, 0, 0, 0.03)',\n  }),\n  menuList: baseStyles => ({\n    ...baseStyles,\n    gap: 4,\n    maxHeight: 150,\n    padding: '8px 26px 8px 14px',\n  }),\n  option: (_, state) => ({\n    color: state.isFocused && 'var(--accent-color)',\n    borderRadius: 4,\n    fontSize: 12,\n    opacity: 0.5,\n    cursor: 'pointer',\n  }),\n};\n\nconst ingredientsSelectorStyles = {\n  ...selectorStyles,\n  container: () => ({\n    ...selectorStyles.container(),\n    backgroundColor: 'var(--input-bg-color)',\n    borderRadius: 4,\n    fontSize: 14,\n    padding: 16,\n    flex: 3,\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    ...selectorStyles.menu(),\n    position: 'absolute',\n    backgroundColor: 'var(--selector-menu-color)',\n    top: 50,\n    right: 0,\n    padding: 16,\n  }),\n  valueContainer: baseStyles => ({\n    ...baseStyles,\n    padding: 0,\n  }),\n  input: baseStyles => ({\n    ...baseStyles,\n    margin: 0,\n    padding: 0,\n  }),\n};\n\nconst measureSelectorStyles = {\n  ...ingredientsSelectorStyles,\n  container: () => ({\n    ...ingredientsSelectorStyles.container(),\n    position: 'static',\n    backgroundColor: 'transparent',\n    flex: 0.5,\n    width: 50,\n    padding: 0,\n  }),\n  input: () => ({\n    display: 'none',\n  }),\n\n  singleValue: () => ({\n    width: 20,\n  }),\n  placeholder: () => ({\n    display: 'none',\n  }),\n};\n\nconst AddRecipeForm = () => {\n  const [image, setImage] = useState(null);\n  const [ingredientsQty, setIngredientsQty] = useState(3);\n  const [ingredients, setIngredients] = useState(\n    Array.from({ length: ingredientsQty }, (_, i) => {\n      return { id: '', measure: [] };\n    })\n  );\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const navigate = useNavigate();\n  const { user } = useUser();\n\n  useEffect(() => {\n    const runEffect = async () => {\n      try {\n        const fetchedIngredientsList = await getIngredients();\n        const fetchedCategoriesList = await getCategories();\n\n        setIngredientsList(fetchedIngredientsList);\n        setCategoriesList(fetchedCategoriesList);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    runEffect();\n  }, []);\n\n  useEffect(() => {\n    const addIngrderientField = () => {\n      if (ingredients.length < ingredientsQty) {\n        console.log('newArr');\n        const newArr = ingredients.push({ id: '', measure: [] });\n        setIngredients(newArr);\n      }\n    };\n    addIngrderientField();\n  }, [ingredientsQty, ingredients]);\n\n  const onChange = imageList => {\n    setImage(imageList[0]);\n  };\n\n  const categoriesOptions = categoriesList.map(ctg => {\n    return { value: ctg.name, label: ctg.name };\n  });\n\n  const ingredientsOptions = ingredientsList.map(i => {\n    return { value: i._id, label: i.name };\n  });\n\n  const dispatch = useDispatch();\n  const formData = new FormData();\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n\n    values.ingredients.map(ingr => (ingr.measure = ingr.measure.join(' ')));\n\n    formData.append('file', image.file);\n    formData.append('title', values.title);\n    formData.append('description', values.description);\n    formData.append('category', values.category);\n    formData.append('time', values.time);\n    formData.append('ingredients', JSON.stringify(values.ingredients));\n    formData.append('instructions', values.instructions);\n    dispatch(addRecipe(formData));\n\n    navigate('/my');\n  };\n\n  const handleDeleteIngredient = i => {\n    const updatedIngredients = ingredients.filter((_, index) => index !== i);\n    setIngredients(updatedIngredients);\n    setIngredientsQty(updatedIngredients.length);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        thumb: null,\n        title: '',\n        description: '',\n        category: '',\n        time: '',\n        ingredients,\n        instructions: '',\n      }}\n      validationSchema={recipeSchema}\n      validateOnBlur={false}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, handleChange, setFieldValue, values }) => {\n        values.thumb = image || null;\n\n        return (\n          <StyledForm>\n            <Info>\n              <ImageField>\n                <ImageUploading onChange={onChange}>\n                  {({ onImageUpdate }) => (\n                    <ImageWrapper onClick={onImageUpdate}>\n                      {image ? (\n                        <img src={values.thumb.dataURL} alt=\"\" />\n                      ) : (\n                        <UploadBtn>\n                          <Icon name=\"camera\" width=\"64\" height=\"64\" />\n                        </UploadBtn>\n                      )}\n                    </ImageWrapper>\n                  )}\n                </ImageUploading>\n                <ErrorMessage\n                  name=\"thumb\"\n                  component={Error}\n                  style={{ bottom: -30, left: 0 }}\n                />\n              </ImageField>\n              <Desc>\n                <DescField>\n                  <DescLabel htmlFor=\"title\">Enter item title</DescLabel>\n                  <Input type=\"text\" id=\"title\" name=\"title\" />\n                  <ErrorMessage name=\"title\" component={Error} />\n                </DescField>\n\n                <DescField>\n                  <DescLabel htmlFor=\"description\">\n                    Enter about recipe\n                  </DescLabel>\n                  <Input id=\"description\" name=\"description\" />\n                  <ErrorMessage name=\"description\" component={Error} />\n                </DescField>\n\n                <DescField>\n                  <DescLabel>Category</DescLabel>\n                  <DescSelect\n                    classNames={{\n                      valueContainer: () => 'valueContainer',\n                    }}\n                    options={categoriesOptions}\n                    onChange={selected => {\n                      setFieldValue('category', selected.value);\n                    }}\n                    styles={{\n                      ...selectorStyles,\n                      container: () => ({\n                        position: 'relative',\n                        width: 123,\n                      }),\n                    }}\n                  />\n                  <ErrorMessage name=\"category\" component={Error} />\n                </DescField>\n\n                <DescField>\n                  <DescLabel>Cooking time</DescLabel>\n                  <DescSelect\n                    id=\"time\"\n                    classNames={{\n                      valueContainer: () => 'valueContainer',\n                      menuList: () => 'menu-list',\n                      input: () => 'input',\n                    }}\n                    options={timeOptions}\n                    onChange={selected => {\n                      setFieldValue('time', selected.value);\n                    }}\n                    styles={selectorStyles}\n                  />\n                  <ErrorMessage name=\"time\" component={Error} />\n                </DescField>\n              </Desc>\n            </Info>\n\n            <IngredientsWrapper>\n              <IngredientsHeader>\n                <FormTitle>Ingredients</FormTitle>\n                <QtySelector>\n                  <IngredientsButton\n                    onClick={() => setIngredientsQty(prevQty => prevQty - 1)}\n                  >\n                    <Icon name=\"icon-minus\" width=\"14\" height=\"14\" />\n                  </IngredientsButton>\n                  <span>{ingredientsQty}</span>\n                  <IngredientsButton\n                    onClick={() => setIngredientsQty(prevQty => prevQty + 1)}\n                  >\n                    <Icon name=\"icon-plus\" width=\"14\" height=\"14\" />\n                  </IngredientsButton>\n                </QtySelector>\n              </IngredientsHeader>\n              <IngredientsList>\n                {Array.from({ length: ingredientsQty }, (_, i) => (\n                  <div key={i}>\n                    <IngredientContainer>\n                      <Ingredient\n                        id={`ingredients[${i}]`}\n                        classNames={{\n                          valueContainer: () => 'valueContainer',\n                          menu: () => 'menu',\n                        }}\n                        options={ingredientsOptions}\n                        onChange={selected => {\n                          setIngredients(prev =>\n                            prev.map((ing, idx) => {\n                              if (idx !== i) return ing;\n\n                              return { ...ing, id: selected.value };\n                            })\n                          );\n                        }}\n                        styles={ingredientsSelectorStyles}\n                      />\n\n                      <Measure>\n                        <MeasureInput\n                          name=\"measureValue\"\n                          autoComplete=\"off\"\n                          onChange={({ target }) => {\n                            setIngredients(prev =>\n                              prev.map((ing, idx) => {\n                                if (idx !== i) return ing;\n                                {\n                                  const newArr = ing.measure;\n                                  newArr[0] = target.value;\n                                  return { ...ing, measure: newArr };\n                                }\n                              })\n                            );\n                          }}\n                        />\n                        <Ingredient\n                          id={`measure[${i}]`}\n                          options={measureOptions}\n                          classNames={{\n                            valueContainer: () => 'valueContainer',\n                            menu: () => 'menu',\n                          }}\n                          onChange={selected => {\n                            setIngredients(prev =>\n                              prev.map((ing, idx) => {\n                                if (idx !== i) return ing;\n                                {\n                                  const newArr = ing.measure;\n                                  newArr[1] = selected.value;\n                                  return { ...ing, measure: newArr };\n                                }\n                              })\n                            );\n                            console.log(values.ingredients);\n                          }}\n                          styles={measureSelectorStyles}\n                        />\n                      </Measure>\n\n                      <Delete\n                        type=\"button\"\n                        onClick={() => handleDeleteIngredient(i)}\n                      >\n                        <Icon name=\"cross\" width=\"18\" height=\"18\" />\n                      </Delete>\n                    </IngredientContainer>\n                    <ErrorMessage\n                      name={`ingredients[${i}].id`}\n                      component={Error}\n                      style={{ position: 'static' }}\n                    />\n                    <ErrorMessage\n                      name={`ingredients[${i}].measure`}\n                      component={Error}\n                    />\n                  </div>\n                ))}\n              </IngredientsList>\n            </IngredientsWrapper>\n\n            <Preparation>\n              <FormTitle htmlFor=\"instructions\">Recipe Preparation</FormTitle>\n              <Instructions\n                as=\"textarea\"\n                id=\"instructions\"\n                name=\"instructions\"\n                placeholder=\"Enter recipe\"\n                onChange={handleChange}\n                rows=\"5\"\n              />\n              <ErrorMessage name=\"instructions\" component={InstructionsError} />\n            </Preparation>\n\n            <ButtonSkew\n              type=\"submit\"\n              variant={user.theme === 'light' ? 'primary' : 'primary-accent'}\n              disabled={isSubmitting}\n            >\n              Add\n            </ButtonSkew>\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddRecipeForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport mediaRule from 'utils/mediaRule';\n\nexport const Title = styled.h2`\n  margin-top: 72px;\n  font-size: 24px;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  display: grid;\n  margin-top: 32px;\n  justify-content: space-between;\n  ${mediaRule('tablet', 'desktop', 'grid-template-columns: 336px 336px;')}\n`;\n\nexport const RecipeItem = styled.li`\n  display: flex;\n  border-bottom: 1px solid var(--recipe-border-color);\n  padding: 24px 0 12px;\n`;\n\nexport const RecipeLink = styled(Link)`\n  display: flex;\n  align-items: start;\n  gap: 12px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n`;\n\nexport const RecipeInfo = styled.div``;\n\nexport const RecipeDescription = styled.p`\n  margin-top: 4px;\n  opacity: 0.6;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getPopularRecipes } from 'redux/recipes/recipesOperations';\nimport {\n  Image,\n  List,\n  RecipeDescription,\n  RecipeItem,\n  RecipeLink,\n  Title,\n} from './PopularRecipes.styled';\nimport { useMediaQuery } from 'react-responsive';\n\nconst PopularRecipes = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [limitedRecipes, setLimitedRecipes] = useState([]);\n  const dispatch = useDispatch();\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n\n  useEffect(() => {\n    const runEffect = () => {\n      isTablet\n        ? setLimitedRecipes(recipes.slice(0, 2))\n        : setLimitedRecipes(recipes.slice(0, 4));\n    };\n    runEffect();\n  }, [isTablet, recipes]);\n\n  useEffect(() => {\n    const fetchPopularRecipes = async () => {\n      try {\n        const popular = await dispatch(getPopularRecipes());\n        setRecipes(popular.payload);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPopularRecipes();\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Popular recipe</Title>\n      <List>\n        {limitedRecipes.map(recipe => (\n          <RecipeItem key={recipe._id}>\n            <RecipeLink to={`/recipe/${recipe._id}`}>\n              <Image\n                src={recipe.preview}\n                alt={recipe.title}\n                width=\"104\"\n                height=\"85\"\n              />\n              <div>\n                <h4>{recipe.title}</h4>\n                <RecipeDescription>\n                  {recipe.description.slice(0, 40)}\n                </RecipeDescription>\n              </div>\n            </RecipeLink>\n          </RecipeItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default PopularRecipes;\n","import AddRecipeForm from 'components/Forms/Recipe/AddRecipeForm';\nimport { MainTitle } from 'components/MainTitle/MainTitle';\nimport PopularRecipes from 'components/PopularRecipes/PopularRecipes';\nimport {\n  Wrapper,\n  Bar,\n  SocialsList,\n  Follow,\n  FollowTitle,\n} from './AddRecipe.styled';\n\nconst AddRecipe = () => {\n  return (\n    <>\n      <MainTitle text=\"Add recipe\" />\n      <Wrapper>\n        <AddRecipeForm />\n        <Bar>\n          <Follow>\n            <FollowTitle>Follow us</FollowTitle>\n            <SocialsList />\n          </Follow>\n          <PopularRecipes />\n        </Bar>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default AddRecipe;\n","import styled from 'styled-components';\nimport mediaRule from 'utils/mediaRule';\nimport Socials from 'components/Socials';\n\nexport const Wrapper = styled.div`\n  ${mediaRule(\n    'desktop',\n    '',\n    'display:flex; gap:120px; justify-content: space-between;'\n  )}\n`;\n\nexport const Bar = styled.div`\n  flex: 1;\n`;\n\nexport const Follow = styled.div`\n  text-align: left;\n  ${mediaRule('', 'desktop', 'display: none;')}\n`;\n\nexport const FollowTitle = styled.h4`\n  font-size: 24px;\n  margin-bottom: 40px;\n`;\n\nexport const SocialsList = styled(Socials)`\n  justify-content: start !important;\n  background-color: red !important;\n`;\n"],"names":["getAllRecipes","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$instance$get","data","wrap","_context","prev","next","instance","sent","console","log","abrupt","t0","stop","apply","arguments","getCategories","createAsyncThunk","_ref5","_callee4","_ref4","thunkAPI","ingredient","_yield$instance$get4","_context4","concat","rejectWithValue","message","_x","_x2","_ref7","_callee5","_ref6","category","_yield$instance$get5","_context5","_x3","_x4","_ref9","_callee6","_ref8","title","_yield$instance$get6","_context6","_x5","_x6","_ref10","_callee7","_yield$instance$get7","_context7","getIngredients","_ref11","_callee8","_yield$instance$get8","_context8","_ref12","_callee9","_","_yield$instance$get9","_context9","_x7","_x8","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","ImageField","_templateObject2","ImageWrapper","_templateObject3","mediaRule","UploadBtn","_templateObject4","Info","_templateObject5","Desc","_templateObject6","DescField","_templateObject7","DescLabel","_templateObject8","DescSelect","Select","_templateObject9","Input","Field","_templateObject10","Error","_templateObject11","FormTitle","_templateObject12","IngredientsWrapper","_templateObject13","IngredientsHeader","_templateObject14","IngredientsList","_templateObject15","QtySelector","_templateObject16","IngredientContainer","_templateObject17","Ingredient","_templateObject18","_templateObject19","Measure","_templateObject20","MeasureInput","_templateObject21","IngredientsButton","_templateObject22","Delete","_templateObject23","Preparation","_templateObject24","Instructions","_templateObject25","InstructionsError","_templateObject26","MainTitleBox","MainTitleStyled","DecorBoxLeft","DecorBoxCenter","DecorBoxRight","MainTitle","text","_jsxs","children","_jsx","recipeSchema","Yup","shape","required","description","time","thumb","ingredients","of","id","measure","min","instructions","ButtonSkew","variant","ButtonSkewStyled","className","timeOptions","Array","from","length","i","label","value","measureOptions","selectorStyles","container","position","control","display","width","border","cursor","valueContainer","baseStyles","_objectSpread","textAlign","fontSize","fontWeight","padding","lineHeight","input","justifySelf","margin","placeholder","indicatorSeparator","dropdownIndicator","alignItems","color","menu","top","right","boxShadow","menuList","gap","maxHeight","option","state","isFocused","borderRadius","opacity","ingredientsSelectorStyles","backgroundColor","flex","measureSelectorStyles","singleValue","_useState","useState","_useState2","_slicedToArray","image","setImage","_useState3","_useState4","ingredientsQty","setIngredientsQty","_useState5","_useState6","setIngredients","_useState7","_useState8","ingredientsList","setIngredientsList","_useState9","_useState10","categoriesList","setCategoriesList","navigate","useNavigate","user","useUser","useEffect","runEffect","fetchedIngredientsList","fetchedCategoriesList","newArr","push","addIngrderientField","onChange","imageList","categoriesOptions","map","ctg","name","ingredientsOptions","_id","dispatch","useDispatch","formData","FormData","Formik","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","values","_ref2","setSubmitting","ingr","join","append","file","JSON","stringify","addRecipe","_ref3","isSubmitting","handleChange","setFieldValue","ImageUploading","onImageUpdate","onClick","src","dataURL","alt","Icon","height","ErrorMessage","component","style","bottom","left","htmlFor","type","classNames","options","selected","styles","prevQty","ing","idx","autoComplete","target","updatedIngredients","filter","index","handleDeleteIngredient","as","rows","theme","disabled","Title","List","RecipeItem","RecipeLink","Link","Image","RecipeDescription","recipes","setRecipes","limitedRecipes","setLimitedRecipes","isTablet","useMediaQuery","minWidth","maxWidth","slice","fetchPopularRecipes","popular","getPopularRecipes","payload","_Fragment","recipe","to","preview","Wrapper","AddRecipeForm","Bar","Follow","FollowTitle","SocialsList","PopularRecipes","Socials"],"sourceRoot":""}
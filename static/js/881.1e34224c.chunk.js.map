{"version":3,"file":"static/js/881.1e34224c.chunk.js","mappings":"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","sources":["components/RegisterPageComponents/validationRegister.js","components/RegisterPageComponents/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nimport {\n  ErrorValidation,\n  ErrorValidationIcon,\n  CorrectValidation,\n  CorrectIconValidationIcon,\n} from './RegisterForm.styled';\n\nconst nameRules =\n  /^[a-zA-Z0-9а-яА-Я]+((['-](?=[a-zA-Z0-9а-яА-Я])|(?=[a-zA-Z0-9а-яА-Я]))?[a-zA-Z0-9а-яА-Я]*)*$/;\nconst emailRules =\n  /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])[a-zA-Z0-9]{6,255}$/;\n\nconst errorMessage = msg => {\n  return (\n    <div className=\"error\">\n      <ErrorValidation>{msg}</ErrorValidation>\n      <ErrorValidationIcon />\n    </div>\n  );\n};\n\nexport const ValidMessage = ({ children }) => {\n  return (\n    <div className=\"valid\">\n      <CorrectValidation>{children}</CorrectValidation>\n      <CorrectIconValidationIcon />\n    </div>\n  );\n};\n\nexport const signupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, errorMessage('Name is too short'))\n    .max(16, errorMessage('Name is too long'))\n    .matches(nameRules, {\n      message: errorMessage('Invalid name'),\n      excludeEmptyString: true,\n    })\n    .required(errorMessage('This field is required')),\n  email: Yup.string()\n    .email(errorMessage('Invalid email format'))\n    .matches(emailRules, {\n      message: errorMessage('Invalid email format'),\n      excludeEmptyString: true,\n    })\n    .required(errorMessage('This field is required')),\n\n  password: Yup.string()\n    .min(6, errorMessage('Password too short'))\n    .max(16, errorMessage('Password is too long'))\n    .matches(passwordRules, {\n      message: errorMessage('Password is not valid'),\n      excludeEmptyString: true,\n    })\n    .required(errorMessage('This field is required')),\n});\n","import { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport { signupSchema, ValidMessage } from './validationRegister';\nimport {\n  FormWrapper,\n  FormStyled,\n  LabelStyled,\n  FieldStyled,\n  FormTitle,\n  FieldsWrapper,\n  UserIcon,\n  EmailIcon,\n  PasswordIcon,\n  SubmitBtn,\n  LinkStyled,\n} from './RegisterForm.styled';\nimport operations from 'redux/auth/authOperations';\nimport { BgOrderFoodImg } from '../../pages/Register/Register.styled';\n\nconst initialValue = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const [isSubmit, setIsSubmit] = useState(false);\n  const dispatch = useDispatch();\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(operations.register(value));\n    setIsSubmit(false);\n    resetForm();\n  };\n\n  return (\n    <FormWrapper>\n      <BgOrderFoodImg></BgOrderFoodImg>\n      <Formik\n        initialValues={initialValue}\n        validationSchema={signupSchema}\n        onSubmit={handleSubmit}\n        validateOnChange={isSubmit}\n        validateOnBlur={false}\n      >\n        {({ errors, touched }) => (\n          <FormStyled noValidate>\n            <FormTitle>Registration</FormTitle>\n            <FieldsWrapper>\n              <LabelStyled htmlFor=\"name\">\n                <FieldStyled\n                  type=\"text\"\n                  name=\"name\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n                  required\n                  pattern=\"^[a-zA-Z0-9а-яА-Я]+(([' -][a-zA-Z0-9а-яА-Я ])?[a-zA-Z0-9а-яА-Я]*)*$\"\n                  placeholder=\"Name\"\n                />\n                <UserIcon />\n                <ErrorMessage name=\"name\" />\n                {touched.name && !errors.name && isSubmit && <ValidMessage />}\n              </LabelStyled>\n              <LabelStyled htmlFor=\"email\">\n                <FieldStyled\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <EmailIcon />\n                <ErrorMessage name=\"email\" />\n                {touched.email && !errors.email && isSubmit && <ValidMessage />}\n              </LabelStyled>\n              <LabelStyled htmlFor=\"password\">\n                <FieldStyled\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <PasswordIcon />\n                <ErrorMessage name=\"password\" />\n                {touched.password && !errors.password && isSubmit && (\n                  <ValidMessage>Password is secure</ValidMessage>\n                )}\n              </LabelStyled>\n            </FieldsWrapper>\n\n            <SubmitBtn type=\"submit\" onClick={() => setIsSubmit(true)}>\n              Sign up\n            </SubmitBtn>\n          </FormStyled>\n        )}\n      </Formik>\n\n      <LinkStyled to={'/signin'}>Sign in</LinkStyled>\n    </FormWrapper>\n  );\n};\n","import { AuthPagesSection, ContainerAuthPageStyled } from './Register.styled';\n\nimport { RegisterForm } from 'components/RegisterPageComponents/RegisterForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { getIsLoading } from 'redux/auth/authSelectors';\nimport { useSelector } from 'react-redux';\n\nconst Register = () => {\n  const isLoading = useSelector(getIsLoading);\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <AuthPagesSection>\n      <ContainerAuthPageStyled>\n        <RegisterForm />\n      </ContainerAuthPageStyled>\n    </AuthPagesSection>\n  );\n};\n\nexport default Register;\n"],"names":["errorMessage","msg","_jsxs","className","children","_jsx","ErrorValidation","ErrorValidationIcon","ValidMessage","_ref","CorrectValidation","CorrectIconValidationIcon","signupSchema","Yup","shape","name","min","max","matches","message","excludeEmptyString","required","email","password","initialValue","RegisterForm","_useState","useState","_useState2","_slicedToArray","isSubmit","setIsSubmit","dispatch","useDispatch","FormWrapper","BgOrderFoodImg","Formik","initialValues","validationSchema","onSubmit","value","resetForm","operations","validateOnChange","validateOnBlur","_ref2","errors","touched","FormStyled","noValidate","FormTitle","FieldsWrapper","LabelStyled","htmlFor","FieldStyled","type","title","pattern","placeholder","UserIcon","ErrorMessage","EmailIcon","PasswordIcon","SubmitBtn","onClick","LinkStyled","to","useSelector","getIsLoading","Loader","AuthPagesSection","ContainerAuthPageStyled"],"sourceRoot":""}
{"version":3,"file":"static/js/527.6d25df16.chunk.js","mappings":"yLAIMA,EAAkB,CACtB,CAAEC,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,UAAWC,MAAO,YAGvBC,EAAc,CAClB,CAAEF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,WA+F5B,EA5FsB,WAyCpB,OACEE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAzCkB,CACpBC,MAAO,GACPC,YAAa,GACbC,YAAa,GACbC,aAAc,IAsCZC,SAzBiB,SAAAC,GACnB,IAAMC,EAAS,CAAC,EAkBhB,OAhBKD,EAAOL,QACVM,EAAON,MAAQ,gJAGZK,EAAOJ,cACVK,EAAOL,YAAc,kHAGlBI,EAAOH,cACVI,EAAOJ,YAAc,iHAGlBG,EAAOF,eACVG,EAAOH,aAAe,2GAGjBG,CACT,EAMIC,SAnCiB,SAACF,EAAMG,GAAyB,IAArBC,EAAaD,EAAbC,cAE9BC,QAAQC,IAAIN,GAGZI,GAAc,EAChB,EA6B2BG,SAEtB,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAY,OACdC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAJ,SAAA,EACHG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,QAAOL,SAAC,sBACvBf,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,WACxBvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,YAGvCP,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,cAAaL,SAAC,wBAC7Bf,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CAACK,GAAG,WAAWH,KAAK,iBAC1BvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACD,KAAK,cAAcE,UAAU,YAG7CP,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,cAAaL,SAAC,wEAC7Bf,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CAACK,GAAG,WAAWH,KAAK,iBAC1BvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACD,KAAK,cAAcE,UAAU,YAG7CP,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,WAAUL,SAAC,cAC1Bf,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAACC,QAAShC,QAGnBsB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,OAAML,SAAC,kBACtBf,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAACC,QAAS7B,QAGnBmB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,eAAcL,SAAC,kEAC9Bf,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CAACK,GAAG,WAAWH,KAAK,kBAC1BvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACD,KAAK,eAAeE,UAAU,YAG9CzB,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAASO,SAAUZ,EAAaF,SAAC,gFAGzC,GAIf,EChGA,EARkB,WAChB,OACEf,EAAAA,EAAAA,KAAA8B,EAAAA,SAAA,CAAAf,UACEf,EAAAA,EAAAA,KAAC+B,EAAa,KAGpB,C","sources":["components/Forms/Recipe/AddRecipeForm.js","pages/AddRecipe.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Select from 'react-select';\n\nconst categoryOptions = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n];\n\nconst timeOptions = [\n  { value: '30 min', label: '30 min' },\n  { value: '60 min', label: '60 min' },\n  { value: '90 min', label: '90 min' },\n];\n\nconst AddRecipeForm = () => {\n  // Початкові значення полів форми\n  const initialValues = {\n    title: '',\n    description: '',\n    ingredients: '',\n    instructions: '',\n  };\n\n  // Обробник подання форми\n  const handleSubmit = (values, { setSubmitting }) => {\n    // Виконати логіку для збереження рецепту\n    console.log(values);\n\n    // Після успішного збереження скидуємо значення полів форми\n    setSubmitting(false);\n  };\n\n  // Валідація полів форми\n  const validateForm = values => {\n    const errors = {};\n\n    if (!values.title) {\n      errors.title = 'Вкажіть заголовок рецепту';\n    }\n\n    if (!values.description) {\n      errors.description = 'Вкажіть опис рецепту';\n    }\n\n    if (!values.ingredients) {\n      errors.ingredients = 'Вкажіть інгредієнти';\n    }\n\n    if (!values.instructions) {\n      errors.instructions = 'Вкажіть інструкції';\n    }\n\n    return errors;\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validateForm}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div>\n            <label htmlFor=\"title\">Enter item title</label>\n            <Field type=\"text\" name=\"title\" />\n            <ErrorMessage name=\"title\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"description\">Enter about recipe</label>\n            <Field as=\"textarea\" name=\"description\" />\n            <ErrorMessage name=\"description\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"ingredients\">Інгредієнти</label>\n            <Field as=\"textarea\" name=\"ingredients\" />\n            <ErrorMessage name=\"ingredients\" component=\"div\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"category\">Category</label>\n            <Select options={categoryOptions} />\n          </div>\n\n          <div>\n            <label htmlFor=\"time\">Cooking time</label>\n            <Select options={timeOptions} />\n          </div>\n\n          <div>\n            <label htmlFor=\"instructions\">Інструкції</label>\n            <Field as=\"textarea\" name=\"instructions\" />\n            <ErrorMessage name=\"instructions\" component=\"div\" />\n          </div>\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Додати рецепт\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddRecipeForm;\n","import AddRecipeForm from 'components/Forms/Recipe/AddRecipeForm';\n\nconst AddRecipe = () => {\n  return (\n    <>\n      <AddRecipeForm />\n    </>\n  );\n};\n\nexport default AddRecipe;\n"],"names":["categoryOptions","value","label","timeOptions","_jsx","Formik","initialValues","title","description","ingredients","instructions","validate","values","errors","onSubmit","_ref","setSubmitting","console","log","children","_ref2","isSubmitting","_jsxs","Form","htmlFor","Field","type","name","ErrorMessage","component","as","Select","options","disabled","_Fragment","AddRecipeForm"],"sourceRoot":""}
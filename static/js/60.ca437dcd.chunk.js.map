{"version":3,"file":"static/js/60.ca437dcd.chunk.js","mappings":"qKA0CaA,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAMjCC,EAAAA,EAAAA,GAAU,SAAU,SAAS,GAADC,OA1CpB,wBA2CRD,EAAAA,EAAAA,GAAU,SAAU,UAAU,GAADC,OAzCrB,uCA0CRD,EAAAA,EAAAA,GAAU,UAAW,GAAG,GAADC,OAxCd,0oB,kFCTb,EAAsB,uBAAtB,EAAoD,wBAApD,EAAoF,yBAApF,EAAqH,yBAArH,EAA+J,kCAA/J,EAAwM,wBAAxM,EAAkP,mCAAlP,EAAkS,8BAAlS,EAAgV,iCAAhV,EAAgY,gCAAhY,EAAsa,uB,qECgFta,EAtEkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,OACNC,MAAK,SAAAC,GAAS,OAAIC,EAAaD,EAAU,IACzCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAAQ,GAC1C,GAAG,CAACX,IAEJ,IAAAY,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCP,EAASS,EAAA,GAAER,EAAYQ,EAAA,GAI9B,YAA0BE,IAAtBX,EAAUY,SAEVC,EAAAA,EAAAA,KAACxB,EAAAA,EAAW,CAAAyB,UACVC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAUH,SAAC,gBAC1BD,EAAAA,EAAAA,KAAA,MAAAC,SACGd,EAAUY,QAAQM,QAAQC,KAAI,SAAAC,GAAM,OAEnCL,EAAAA,EAAAA,MAAA,MAAqBC,UAAWC,EAASH,SAAA,EACvCD,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAASI,IAAKD,EAAOE,QAASC,IAAI,MAClDR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBH,SAAA,EAClCD,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAmBH,SAAEM,EAAOI,SAC3CT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASH,SAAA,EACvBC,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAeH,SAAA,CAAC,IAAEM,EAAOK,gBACvCV,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAkBH,SAAA,CAAC,IAAEM,EAAOM,iBAC1Cb,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAUH,SAAEM,EAAOO,WAGtCd,EAAAA,EAAAA,KAAA,UACEG,UAAWC,EACXW,KAAK,SACLC,QAAS,kBAAMlC,GAASmC,EAAAA,EAAAA,IAAaV,EAAOW,KAAK,EAACjB,UAElDD,EAAAA,EAAAA,KAACmB,EAAAA,IAAO,CAACC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,aAG3CtB,EAAAA,EAAAA,KAAA,UACEoB,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,OAEnBR,KAAK,SACLC,QAAS,kBAAMlC,GAAS0C,EAAAA,EAAAA,IAAcjB,EAAOW,KAAK,KAEpDlB,EAAAA,EAAAA,KAAA,UACEG,UAAWC,EACXW,KAAK,SACLC,QAAS,kBAAMlC,GAAS2C,EAAAA,EAAAA,IAAclB,EAAOW,KAAK,EAACjB,SACpD,oBA/BIM,EAAOW,IAmCX,YAQblB,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEE,OAAQ,OAAQI,OAAQ,QAASzB,SAAC,iCAKpD,C","sources":["components/ContainerBG/ContainerBG.js","webpack://yummy/./src/pages/MyRecipes/MyRecipes.module.css?81dd","pages/MyRecipes/MyRecipes.js"],"sourcesContent":["import styled from 'styled-components';\nimport mediaRule from 'utils/mediaRule';\n// import spinach558x852 from '../../images/desktop';\n\n\n\nconst mobile = ` max-width: 375px;`;\n\nconst tablet = ` width: 768px;  padding: 0 32px; `;\n\nconst desktop = `\n\n// padding: 0 100px;\nmax-width: 1440px;\n\n// &:before {\n//     content: \"\";\n//     position: absolute;\n//     z-index: -1;\n\n//     // background-color: red;\n//     // background-image: url({img}),url({img};\n//     background-repeat: no-repeat;\n//      transform: rotate(-149deg), rotate(-29deg);\n    \n//     background-position: left bottom, right bottom;;\n//     // background-position: 100% 100%, 50% 50%;\n\n  \n//     background-size: 558px 852px, 438px 474px;\n//     background-attachment: fixed;\n    \n//     //  width: 100%;\n//      height: 100% ;\n//      width: 1440px;\n//     //  height: 100vh ;\n   \n//   }\n\n\n`;\n\nexport const ContainerBG = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 16px;\n  position: relative;\n\n  ${mediaRule('mobile', 'tablet', `${mobile}`)}\n  ${mediaRule('tablet', 'desktop', `${tablet}`)}\n  ${mediaRule('desktop', '', `${desktop}`)}\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MyRecipes_img__lnPls\",\"item\":\"MyRecipes_item__Mlxy7\",\"block\":\"MyRecipes_block__RJCpm\",\"title\":\"MyRecipes_title__sO3SE\",\"section__title\":\"MyRecipes_section__title__H8Nrl\",\"text\":\"MyRecipes_text__F6s1J\",\"text__container\":\"MyRecipes_text__container__hsO-N\",\"text__info\":\"MyRecipes_text__info__i7nUY\",\"text__studies\":\"MyRecipes_text__studies__hFUMP\",\"BiTrash__btn\":\"MyRecipes_BiTrash__btn__uLl3E\",\"btn\":\"MyRecipes_btn__TY5E-\"};","import css from './MyRecipes.module.css';\nimport { BiTrash } from 'react-icons/bi';\nimport { ContainerBG } from 'components/ContainerBG/ContainerBG';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteRecipe,\n  getRecipeById,\n  getRecipeList,\n} from 'redux/recipes/recipesOperations';\nimport { useEffect, useState } from 'react';\nimport { addToFavorite } from 'redux/favorite/favoriteOperations';\nconst MyRecipes = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getRecipeList())\n      .then(myRecipes => setMyRecipes(myRecipes))\n      .catch(err => console.log(err.message));\n  }, [dispatch]);\n\n  const [myRecipes, setMyRecipes] = useState([]);\n  // console.log(`page myRecipes: `, myRecipes);\n  // console.log(`page myRecipes/payload: `, myRecipes.payload);\n\n  if (myRecipes.payload !== undefined) {\n    return (\n      <ContainerBG>\n        <div>\n          <h1 className={css.title}>My recipes</h1>\n          <ul>\n            {myRecipes.payload.recipes.map(recipe => (\n              // {/* {recipes.myRecipe.map(recipe => ( */}\n              <li key={recipe._id} className={css.item}>\n                <img className={css.img} src={recipe.preview} alt=\"\"></img>\n                <div className={css.text__container}>\n                  <h2 className={css.section__title}>{recipe.title}</h2>\n                  <div className={css.text}>\n                    <p className={css.text__info}> {recipe.description}</p>\n                    <p className={css.text__studies}> {recipe.instructions}</p>\n                    <span className={css.block}>{recipe.time}</span>\n                  </div>\n\n                  <button\n                    className={css.BiTrash__btn}\n                    type=\"button\"\n                    onClick={() => dispatch(deleteRecipe(recipe._id))}\n                  >\n                    <BiTrash style={{ width: '24px', height: '24px' }} />\n                  </button>\n\n                  <button\n                    style={{\n                      width: '24px',\n                      height: '24px',\n                      backgroundColor: 'red',\n                    }}\n                    type=\"button\"\n                    onClick={() => dispatch(addToFavorite(recipe._id))}\n                  ></button>\n                  <button\n                    className={css.btn}\n                    type=\"button\"\n                    onClick={() => dispatch(getRecipeById(recipe._id))}\n                  >\n                    See recipe\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </ContainerBG>\n    );\n  } else {\n    return (\n      <p style={{ height: '50vw', margin: '50px' }}>\n        you have not added any recipe\n      </p>\n    );\n  }\n};\n\nexport default MyRecipes;\n"],"names":["ContainerBG","styled","_templateObject","_taggedTemplateLiteral","mediaRule","concat","dispatch","useDispatch","useEffect","getRecipeList","then","myRecipes","setMyRecipes","catch","err","console","log","message","_useState","useState","_useState2","_slicedToArray","undefined","payload","_jsx","children","_jsxs","className","css","recipes","map","recipe","src","preview","alt","title","description","instructions","time","type","onClick","deleteRecipe","_id","BiTrash","style","width","height","backgroundColor","addToFavorite","getRecipeById","margin"],"sourceRoot":""}